#import <Foundation/Foundation.h>
#import "SWGMemberCreateResponse.h"
#import "SWGError.h"
#import "SWGMemberCreateRequest.h"
#import "SWGMemberResponse.h"
#import "SWGMemberUserResponse.h"
#import "SWGMemberLocationResponse.h"
#import "SWGEnumerationItemResponse.h"
#import "SWGObject.h"
#import "SWGApiClient.h"


/**
 * NOTE: This class is auto generated by the swagger code generator program. 
 * https://github.com/swagger-api/swagger-codegen 
 * Do not edit the class manually.
 */

@interface SWGMerchantsApi: NSObject

@property(nonatomic, assign)SWGApiClient *apiClient;

-(instancetype) initWithApiClient:(SWGApiClient *)apiClient;
-(void) addHeader:(NSString*)value forKey:(NSString*)key;
-(unsigned long) requestQueueSize;
+(SWGMerchantsApi*) apiWithHeader:(NSString*)headerValue key:(NSString*)key;
+(SWGMerchantsApi*) sharedAPI;
///
///
/// Creates a new Merchant
/// Creates a *Merchant* and optionally *MerchantLocation* and *MerchantUser*
///
/// @param body The *Merchant* to create
/// 
///
/// @return SWGMemberCreateResponse*
-(NSNumber*) createMemberWithBody: (SWGMemberCreateRequest*) body
    completionHandler: (void (^)(SWGMemberCreateResponse* output, NSError* error)) handler;


///
///
/// Returns a Merchant
/// Returns a *Merchant*
///
/// @param memberId The primary key of the *Merchant*
/// 
///
/// @return SWGMemberResponse*
-(NSNumber*) getMemberWithMemberId: (NSString*) memberId
    completionHandler: (void (^)(SWGMemberResponse* output, NSError* error)) handler;


///
///
/// Returns a collection of MerchantUsers
/// Returns a collection of *MerchantUsers* belonging to a *MerchantLocation*
///
/// @param memberId The primary key of the *Merchant*
/// 
///
/// @return SWGMemberUserResponse*
-(NSNumber*) getMemberLocationUsersWithMemberId: (NSString*) memberId
    completionHandler: (void (^)(SWGMemberUserResponse* output, NSError* error)) handler;


///
///
/// Returns a collection of MerchantLocations
/// Returns a collection of *MerchantLocation* records belonging to a *Merchant*
///
/// @param memberId The primary key of the *Merchant*
/// @param membersLocationsId An optional members_locations_id to filter the results with
/// 
///
/// @return SWGMemberLocationResponse*
-(NSNumber*) getMemberLocationsWithMemberId: (NSString*) memberId
    membersLocationsId: (NSString*) membersLocationsId
    completionHandler: (void (^)(SWGMemberLocationResponse* output, NSError* error)) handler;


///
///
/// Returns collection of industries
/// Returns the industries available for a *Merchant*
///
/// 
///
/// @return SWGEnumerationItemResponse*
-(NSNumber*) getMemberMetaIndustriesWithCompletionHandler: 
    (void (^)(SWGEnumerationItemResponse* output, NSError* error)) handler;


///
///
/// Returns collection of statuses
/// Returns the statuses available for a *Merchant* or *MerchantUsers*
///
/// 
///
/// @return SWGEnumerationItemResponse*
-(NSNumber*) getMemberMetaStatusesWithCompletionHandler: 
    (void (^)(SWGEnumerationItemResponse* output, NSError* error)) handler;


///
///
/// Returnsa a collection of MerchantUsers
/// Returns a collection of *MerchantUser* records belonging to a *Merchant*
///
/// @param memberId The id of the *Merchant*
/// @param userId Optional user_id to filter the results with
/// 
///
/// @return SWGMemberUserResponse*
-(NSNumber*) getMemberUsersWithMemberId: (NSString*) memberId
    userId: (NSString*) userId
    completionHandler: (void (^)(SWGMemberUserResponse* output, NSError* error)) handler;



@end
